# 1,在 docker in docker 方案下. 在本机运行,则若干个 devcontainer,运行在主机上
# 2,在 docker in docker 方案下, 在admin的devcontainer中运行,则若干个devcontainer,运行在docker内
# 更推荐方案1, 更符合 [1个vscode窗口=1个开发环境≈开发一个微服务] 的场景, 使用起来更清晰 ; 
# 方案2也可,嵌套层级比较深,看个人习惯.

#安装vscode docker插件,以获取语法自动提示和补全功能
version: "3"

# networks:
#   network:
#     ipam:
#       driver: default
#       config:
#         - subnet: '192.168.0.0/16'

services:
  # devmaster:
  #   build:
  #     context: ./
  #     dockerfile: .devcontainer/Dockerfile
  #     args: { "VARIANT": "focal" }
  #   container_name: meta-devmaster
  #   restart: always
  #   volumes:
  #     - .:/workspaces:cached
  portal:
    build:
      context: ./portal
      dockerfile: .devcontainer/Dockerfile
      args: { "VARIANT": "17.4.0-bullseye" }
    container_name: meta-portal
    restart: always
    volumes:
      # Mount the root folder that contains .git 到 容器内的/workspaces目录
      # 若要在container中执行docker-compose命令，前者得写主机的路径，不能写当年container的路径，有点绕，
      # TODO，想办法改良，或者在宿主机执行docker-compose命令
      # - /Users/cdd/Works/code/metacloud:/workspaces:cached
      - .:/workspaces:cached
    ports:
      - '8000:8000'
    # depends_on:
    #   - apig
    # command: [ 'nginx-debug', '-g', 'daemon off;' ]
    # command: [ 'sleep','infinity' ]
    command:
      - /bin/sh
      - -c
      - |
        npm i
        npm run dev
    # networks:
    #   network:
    #     ipv4_address: 192.168.0.31

  server-gin:
    build:
      context: ./server/gin
      dockerfile: .devcontainer/Dockerfile
      args: {"VARIANT": "1.17-bullseye","NODE_VERSION": "lts/*"}
    container_name: meta-server-gin
    restart: always
    volumes:
      # Mount the root folder that contains .git
      - .:/workspaces:cached
    ports:
      - '8001:8001'
      - '8011:8011'
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    # command: [ 'sleep','infinity' ]
    command: 
      - /bin/sh
      - -c
      - |
        go build server.go 
        ./server
    # networks:
    #   network:
    #     ipv4_address: 192.168.0.32
  server-toy:
    build:
      context: ./server/toy
      dockerfile: .devcontainer/Dockerfile
      args: { "VARIANT": "3.9-bullseye","NODE_VERSION": "lts/*"}
    container_name: meta-server-toy
    restart: always
    volumes:
      # Mount the root folder that contains .git
      - .:/workspaces:cached
    ports:
      - '8002:8002'
    # command: [ 'sleep','infinity' ]
    command: 
      - /bin/sh
      - -c
      - |
        pip3 install -r requirements.txt
        python app.py
    # networks:
    #   network:
    #     ipv4_address: 192.168.0.33
  mysql:
    image: mysql:8.0
    container_name: meta-mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci #设置utf8字符集
    restart: always
    ports:
      - "13306:3306"  # host物理直接映射端口为13306
    environment:
      MYSQL_DATABASE: 'MCdev' # 初始化启动时要创建的数据库的名称
      MYSQL_ROOT_PASSWORD: 'mc@123' # root管理员用户密码
    # networks:
    #   network:
    #     ipv4_address: 192.168.0.254
  # apig:
  #   image: kong:2.7.1-ubuntu
  #   container_name: meta-server-apig
  #   restart: always
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - server-gin
  #     - server-toy
  #   networks:
  #     network:
  #       ipv4_address: 192.168.0.22
  redis:
    image: redis:7.0-rc-bullseye
    container_name: meta-redis # 容器名
    restart: always
    ports:
      - '16379:6379'
    # networks:
    #   network:
    #     ipv4_address: 192.168.0.255