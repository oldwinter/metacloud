apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal
  labels:
    app: portal
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portal
      version: v1
  template:
    metadata:
      labels:
        app: portal
        version: v1
    spec:
      containers:
      - name: forecast
        image: "{{ .Values.registry.addr }}/{{ .Values.microservice.portal.image }}:{{ .Values.microservice.portal.version }}" 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-gin
  labels:
    app: server-gin
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-gin
      version: v1
  template:
    metadata:
      labels:
        app: server-gin
        version: v1
    spec:
      containers:
      - name: forecast
        image: "{{ .Values.registry.addr }}/{{ .Values.microservice.server_gin.image }}:{{ .Values.microservice.server_gin.version }}" 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-toy
  labels:
    app: server-toy
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-toy
      version: v1
  template:
    metadata:
      labels:
        app: server-toy
        version: v1
    spec:
      containers:
      - name: forecast
        image: "{{ .Values.registry.addr }}/{{ .Values.microservice.server_toy.image }}:{{ .Values.microservice.server_toy.version }}" 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8002
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: meta-mysql
  labels:
    app: meta-mysql
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meta-mysql
      version: v1
  template:
    metadata:
      labels:
        app: meta-mysql
        version: v1
    spec:
      containers:
      - name: forecast
        image: mysql:8.0
        imagePullPolicy: IfNotPresent
        # command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        # env: 
        # - MYSQL_DATABASE: 'MCdev' # 初始化启动时要创建的数据库的名称
        # - MYSQL_ROOT_PASSWORD: 'mc@123' # root管理员用户密码
        ports:
        - containerPort: 3306
        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meta-redis
  labels:
    app: meta-redis
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: meta-redis
      version: v1
  template:
    metadata:
      labels:
        app: meta-redis
        version: v1
    spec:
      containers:
      - name: forecast
        image: redis:7.0-rc-bullseye 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
---

